---
import { Navigation, Footer } from "@components";
import CommonUtils from "@util/CommonUtils";
import LanguageUtils from "@util/LanguageUtils";
import menuJson from "../menu.json";
import menuUaJson from "../menu_ua.json";
import "../../base.css";

export interface Props {
  title: string;
  metaImage?: string;
  metaDescription?: string;
  darkFooter?: boolean;
  darkNavigation?: boolean;
}

const { title, metaImage, metaDescription, darkFooter, darkNavigation } =
  Astro.props;
const path = Astro.url.pathname;
const baseUrl = CommonUtils.getBaseUrl(true);

const localeFromUrl = LanguageUtils.getLocaleFromUrl(Astro.url, baseUrl);

const translatedAndRebasedMenu = CommonUtils.rebaseMenu(
  baseUrl,
  localeFromUrl === "ua" ? menuUaJson : menuJson
);

const isProduction = import.meta.env.MODE === "production";

const META_TITLE = `${title} - Tolocar Project`;
const META_CANONICAL_URL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang={localeFromUrl} class="scroll-smooth h-full overflow-x-hidden">
  <head>
    <base href={baseUrl} />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href={"/favicon.png"} />
    <meta name="generator" content={Astro.generator} />
    {title && <meta property="og:title" content={META_TITLE} />}
    <meta property="og:url" content={META_CANONICAL_URL} />
    {metaImage && <meta property="og:image" content={Astro.site + metaImage} />}
    {
      metaDescription && (
        <meta property="og:description" content={metaDescription} />
      )
    }
    <meta
      name="description"
      content="The Tolocar project sends mobile makerspaces into Ukraine to help, empower, equip and train local communities through open technology, knowledge and innovation."
    />
    <meta name="keywords" content="tolocar, makerspaces, ukraine" />
    {
      isProduction && (
        <script
          async
          defer
          src="https://analytics.bitbetter.de/script.js"
          data-website-id="142e119c-430e-4681-8870-35afc03dbe8e"
          is:inline
        />
      )
    }
    <title>{META_TITLE}</title>
  </head>
  <body
    class="w-full font-inter antialiased min-h-full h-auto tracking-[-0.02em] overflow-x-hidden flex flex-col"
  >
    <Navigation
      baseUrl={baseUrl}
      path={path}
      menu={translatedAndRebasedMenu}
      locale={localeFromUrl}
      dark={darkNavigation || false}
      client:only="react"
    />
    <main class="flex flex-col items-center min-h-full h-auto">
      <slot />
    </main>
    <Footer
      locale={localeFromUrl}
      menu={translatedAndRebasedMenu}
      className={darkFooter ? "!bg-neutral-50" : ""}
    />
  </body>
</html>
