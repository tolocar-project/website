---
import type { IInterventionFrontmatter } from "@interfaces/IIntervention";
import { InterventionsMap } from "@components";
import "mapbox-gl/dist/mapbox-gl.css";
import mapbox from "mapbox-gl";
import {
  trimAndSortInterventions,
  transformInterventionsToPoiData,
} from "@util/ContentTransformer";
import { getCollection } from "astro:content";


interface Props {
  count?: number;
}

const { count } = Astro.props;

const rawInterventionsContent = await Astro.glob<
  Partial<IInterventionFrontmatter>
>("../pages/en/interventions/*.mdx");

const trimmedAndSorted = trimAndSortInterventions(
  rawInterventionsContent,
  count
);

const sortedPoiData = transformInterventionsToPoiData(trimmedAndSorted);


const localPois = (await getCollection('pois')).map((entry) => entry.data);
const combinedPois = [...(localPois || []), ...sortedPoiData];

const bounds = combinedPois.reduce(
  (bounds, poi) => {
    return bounds.extend(poi.locationLngLat as [number, number]);
  },
  new mapbox.LngLatBounds(
    sortedPoiData[0].locationLngLat,
    sortedPoiData[0].locationLngLat
  )
);
---

<InterventionsMap
  client:only="react"
  token={import.meta.env.PUBLIC_MAPBOX_TOKEN}
  interventions={combinedPois}
  bounds={bounds.toArray() as [[number, number], [number, number]]}
/>
